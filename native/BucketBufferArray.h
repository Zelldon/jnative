/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class de_zell_jnative_BucketBufferArray */

#ifndef _Included_de_zell_jnative_BucketBufferArray
#define _Included_de_zell_jnative_BucketBufferArray
#ifdef __cplusplus
extern "C" {
#endif
#undef de_zell_jnative_BucketBufferArray_ALLOCATION_FACTOR
#define de_zell_jnative_BucketBufferArray_ALLOCATION_FACTOR 32L
#undef de_zell_jnative_BucketBufferArray_OVERFLOW_BUCKET_ID
#define de_zell_jnative_BucketBufferArray_OVERFLOW_BUCKET_ID -1L
#undef de_zell_jnative_BucketBufferArray_INVALID_ADDRESS
#define de_zell_jnative_BucketBufferArray_INVALID_ADDRESS 0LL
/*
 * Class:     de_zell_jnative_BucketBufferArray
 * Method:    allocate
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zell_jnative_BucketBufferArray_allocate
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zell_jnative_BucketBufferArray
 * Method:    free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_zell_jnative_BucketBufferArray_free
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zell_jnative_BucketBufferArray
 * Method:    allocateBucketBufferHeader
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_de_zell_jnative_BucketBufferArray_allocateBucketBufferHeader
  (JNIEnv *, jobject);

/*
 * Class:     de_zell_jnative_BucketBufferArray
 * Method:    allocateNewBucketBuffer
 * Signature: (JJI)J
 */
JNIEXPORT jlong JNICALL Java_de_zell_jnative_BucketBufferArray_allocateNewBucketBuffer
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     de_zell_jnative_BucketBufferArray
 * Method:    readInt
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_de_zell_jnative_BucketBufferArray_readInt
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zell_jnative_BucketBufferArray
 * Method:    readLong
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_de_zell_jnative_BucketBufferArray_readLong
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_zell_jnative_BucketBufferArray
 * Method:    allocateNewBucket
 * Signature: (JJIII)V
 */
JNIEXPORT void JNICALL Java_de_zell_jnative_BucketBufferArray_allocateNewBucket
  (JNIEnv *, jobject, jlong, jlong, jint, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
